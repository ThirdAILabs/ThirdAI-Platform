name: Release Job

on:
  push:
    branches: [main, adds-local-registry]

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up SSH for cloning
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PLATFORM_INSTALLATION_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Clone Platform repository
        run: |
          git clone git@github.com:ThirdAILabs/platform.git

      - name: Download and store the model
        run: |
          mkdir -p models
          wget -O models/qwen2-0_5b-instruct-fp16.gguf https://huggingface.co/Qwen/Qwen2-0.5B-Instruct-GGUF/resolve/main/qwen2-0_5b-instruct-fp16.gguf?download=true

      - name: Ensure scripts directory exists
        run: mkdir -p ./platform/scripts

      - name: Copy driver script to parent directory
        run: |
          cp ./packaging/driver.sh ./driver.sh

      - name: Copy config.yml to parent directory
        run: |
          cp ./platform/config.yml ./config.yml

      - name: Copy README.md to parent directory
        run: |
          cp ./packaging/README.md ./README.md

      - name: Package platform, model, driver, config, and README into tarball
        run: |
          tar -czvf thirdai-platform-package.tar.gz ./platform ./models/qwen2-0_5b-instruct-fp16.gguf ./driver.sh ./config.yml ./README.md

      - name: Upload platform package artifact
        uses: actions/upload-artifact@v3
        with:
          name: thirdai-platform-package
          path: thirdai-platform-package.tar.gz

      # Install Docker since it's not available by default
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
            "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce

      - name: Log in to Docker Registry
        run: |
          docker login -u thirdaiplatform-pull-local-registry -p 1N7CsVddLTv4+enVywVCgjOkDkMqpv63WenU0bWihF+ACRBVBnXz thirdaiplatform.azurecr.io

      - name: Download Docker images
        run: |
          mkdir -p docker_images

          echo "Pulling Docker images..."

          # Pull llama.cpp:server image
          docker pull thirdaiplatform.azurecr.io/llama.cpp:server
          docker save -o docker_images/llama.cpp_server.tar thirdaiplatform.azurecr.io/llama.cpp:server

          # List of images to pull and save with the latest tag
          images=(thirdai_platform_local_registry data_generation_job_local_registry train_job_local_registry node_discovery_local_registry deployment_job_local_registry llm_dispatch_job_local_registry frontend_local_registry llm_cache_job_local_registry)

          for image in "${images[@]}"
          do
              echo "Pulling thirdaiplatform.azurecr.io/$image:latest..."
              docker pull thirdaiplatform.azurecr.io/$image:latest
              docker save -o docker_images/${image}_latest.tar thirdaiplatform.azurecr.io/$image:latest
          done

          # Pull nomad-autoscaler:0.3.7 image
          docker pull thirdaiplatform.azurecr.io/nomad-autoscaler:0.3.7
          docker save -o docker_images/nomad-autoscaler_0.3.7.tar thirdaiplatform.azurecr.io/nomad-autoscaler:0.3.7

          # Pull redis:latest image
          docker pull thirdaiplatform.azurecr.io/redis:latest
          docker save -o docker_images/redis_latest.tar thirdaiplatform.azurecr.io/redis:latest

          # Pull traefik:v2.10 image
          docker pull thirdaiplatform.azurecr.io/traefik:v2.10
          docker save -o docker_images/traefik_v2.10.tar thirdaiplatform.azurecr.io/traefik:v2.10

          # Pull victoria-metrics:latest image
          docker pull thirdaiplatform.azurecr.io/victoria-metrics:latest
          docker save -o docker_images/victoria-metrics_latest.tar thirdaiplatform.azurecr.io/victoria-metrics:latest

          # Pull grafana:main-ubuntu image
          docker pull thirdaiplatform.azurecr.io/grafana:main-ubuntu
          docker save -o docker_images/grafana_main-ubuntu.tar thirdaiplatform.azurecr.io/grafana:main-ubuntu

          # Pull loki:main image
          docker pull thirdaiplatform.azurecr.io/loki:main
          docker save -o docker_images/loki_main.tar thirdaiplatform.azurecr.io/loki:main

          echo "All images pulled and saved in the docker_images folder."

      - name: Replace driver script with local registry version
        run: |
          cp ./packaging/driver_local_registry.sh ./driver.sh

      - name: Package Docker images, driver script, config, and README into tarball
        run: |
          tar -czvf thirdai-platform-package-local-registry.tar.gz ./docker_images ./driver.sh ./config.yml ./README.md

      - name: Upload Docker images artifact
        uses: actions/upload-artifact@v3
        with:
          name: thirdai-platform-package-local-registry
          path: thirdai-platform-package-local-registry.tar.gz

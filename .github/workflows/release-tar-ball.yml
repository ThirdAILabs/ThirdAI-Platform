name: Release/Installation-testing Job

on:
  release:
    types: [published] # This triggers the workflow when a new release is published

jobs:
  Retrieve_facts:
    runs-on: ubuntu-latest

    outputs:
      version: "v${{ steps.docker_image_version.outputs.version }}"
      docker_image_branch_name: ${{ steps.docker_image_branch_name.outputs.branch_name }}

    steps:
      - name: Get the new version of the docker images
        id: docker_image_version
        run: |
          version=${{ github.event.release.tag_name }}
          echo "Next version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set the branch name of the docker images
        id: docker_image_branch_name
        run: |
          branch_name="release-test-main"
          echo "Docker image branch to build on: $branch_name"
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

  Build_and_push_images:
    needs: [Retrieve_facts]
    uses: ./.github/workflows/build_and_push_images.yml
    with:
      docker_image_branch_name: ${{ needs.Retrieve_facts.outputs.docker_image_branch_name }}
      docker_image_version: ${{ needs.Retrieve_facts.outputs.version }}

  package:
    needs: [Retrieve_facts, Build_and_push_images]
    uses: ./.github/workflows/packaging.yml
    with:
      Installer_branch_name: main
      docker_image_branch_name: ${{ needs.Retrieve_facts.outputs.docker_image_branch_name }}
      docker_image_version: "v${{ needs.Retrieve_facts.outputs.version }}"
      
  run_tests:
    needs: [Retrieve_facts, Build_and_push_images, package]
    uses: ./.github/workflows/integration_testing.yml
    with:
      docker_image_branch_name: ${{ needs.Retrieve_facts.outputs.docker_image_branch_name }}
      docker_image_version: "v${{ needs.Retrieve_facts.outputs.version }}"
      docker_registry_password: ${{ needs.Build_and_push_images.outputs.pull_password }}
      tarball_filename: ${{ needs.package.outputs.online_package_name }}
  
  conditional_cleanup:
    needs: [Retrieve_facts, Build_and_push_images, package, run_tests]
    if: needs.run_tests.outputs.test_exit_code
    uses: ./.github/workflows/cleanup.yml
    with:
      docker_image_branch_name: ${{ needs.Retrieve_facts.outputs.docker_image_branch_name }}
      docker_image_version: ${{ needs.Retrieve_facts.outputs.version }}
      offline_package_name: ${{ needs.package.outputs.offline_package_name }}
      online_package_name: ${{ needs.package.outputs.online_package_name }}
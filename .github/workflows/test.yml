name: Setup ThirdAI Platform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup_thirdai:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Setup Python and Install Dependencies
      run: |
        python -m venv ${{ github.workspace }}/venv
        source venv/bin/activate
        pip install -r deployment_job/requirements.txt
        pip install -r docs/requirements.txt
        pip install -r headless/requirements.txt
        pip install -r llm_generation_job/requirements.txt
        pip install -r thirdai_platform/requirements.txt
        pip install -r train_job/requirements.txt
        echo "PYTHON_PATH=${{ github.workspace }}/venv/bin/python" >> $GITHUB_ENV

    - name: Install Homebrew
      run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    - name: Install Nomad
      run: brew install nomad

    - name: Start Nomad in Development Mode
      run: |
        nohup sudo nomad agent -dev -config="local_setup/agent.hcl" > nomad.log 2>&1 &
        echo "NOMAD_ENDPOINT=http://localhost:4646/" >> $GITHUB_ENV
    
    - name: Verify Nomad Cluster
      run: sleep 10 && nomad node status

    - name: Install Traefik
      run: brew install traefik

    - name: Run Traefik
      run: |
        cd local_setup
        nohup bash launch_traefik.sh > traefik.log 2>&1 &
        cd ..
        echo "PUBLIC_MODEL_BAZAAR_ENDPOINT=http://localhost:80/" >> $GITHUB_ENV
        echo "PRIVATE_MODEL_BAZAAR_ENDPOINT=http://localhost:80/" >> $GITHUB_ENV

    - name: Install PostgreSQL
      run: brew install postgresql@14

    - name: Start PostgreSQL Service
      run: brew services start postgresql@14

    - name: Setup PostgreSQL Database
      run: |
        sleep 10
        psql -U $USER -d postgres -c "SELECT 1"
        psql -U $USER -d postgres -c "CREATE ROLE postgres WITH LOGIN SUPERUSER;" || true
        psql -U postgres -c "ALTER ROLE postgres WITH PASSWORD 'yourpassword';"
        psql -U postgres -c "CREATE DATABASE model_bazaar;"
        psql -U postgres -d model_bazaar -c "CREATE EXTENSION IF NOT EXISTS pgcrypto;"
        echo "DATABASE_URI=postgresql://postgres:yourpassword@localhost:5432/model_bazaar" >> $GITHUB_ENV

    - name: Install Vault
      run: |
        brew tap hashicorp/tap
        brew install hashicorp/tap/vault
        echo "HASHICORP_VAULT_ENDPOINT=http://127.0.0.1:8200" >> $GITHUB_ENV
        echo "HASHICORP_VAULT_TOKEN=00000000-0000-0000-0000-000000000000" >> $GITHUB_ENV

    - name: Start Vault Server
      run: nohup vault server --dev --dev-root-token-id="00000000-0000-0000-0000-000000000000" > vault.log 2>&1 &

    - name: Create Directories for Share and Test
      run: |
        mkdir -p $HOME/nfs/dir
        mkdir -p $HOME/local/test/dir
        echo "SHARE_DIR=$HOME/nfs/dir" >> $GITHUB_ENV
        echo "LOCAL_TEST_DIR=$HOME/local/test/dir" >> $GITHUB_ENV

    - name: Setup additional environment variables
      run: |
        echo "LICENSE_PATH=${{ github.workspace }}/local_setup/ndb_enterprise_license.json" >> $GITHUB_ENV
        echo "JWT_SECRET=CsnCr3lebs9eJQ" >> $GITHUB_ENV
        echo "SENDGRID_KEY=sendgrid-key" >> $GITHUB_ENV
        echo "GENAI_KEY=your-openai-key" >> $GITHUB_ENV
        echo "ADMIN_USERNAME=admin" >> $GITHUB_ENV
        echo "ADMIN_MAIL=admin@mail.com" >> $GITHUB_ENV
        echo "ADMIN_PASSWORD=password" >> $GITHUB_ENV
        echo "PLATFORM=local" >> $GITHUB_ENV
        echo "TEST_ENVIRONMENT=True" >> $GITHUB_ENV

    - name: Launch Backend
      run: |
        source ${{ github.workspace }}/venv/bin/activate
        cd $GITHUB_WORKSPACE/thirdai_platform
        nohup uvicorn main:app --reload --host 0.0.0.0 --port 8000 > uvicorn.log 2>&1 &

    - name: Run Tests
      run: |
        source ${{ github.workspace }}/venv/bin/activate
        cd $GITHUB_WORKSPACE
        python3 -m headless.test --base-url $PUBLIC_MODEL_BAZAAR_ENDPOINT --email $ADMIN_MAIL --password $ADMIN_PASSWORD --dag-file headless/dag_config.yaml --all --run-name 12

    - name: Display Logs
      if: always()
      run: |
        echo "Nomad Logs:"
        cat nomad.log
        echo "Traefik Logs:"
        cat local_setup/traefik.log
        echo "Vault Logs:"
        cat vault.log
        echo "Uvicorn Logs:"
        cat $GITHUB_WORKSPACE/thirdai_platform/uvicorn.log

    - name: Stop Services
      if: always()
      run: |
        brew services stop postgresql
        brew services stop nomad

name: Build and Package Docker Images

on:
  push:
    branches:
      - main
      - release-ci
    

jobs:
  build-and-package:
    name: Build, Package, and Upload Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      
      - name: Get current branch name
        id: get_branch
        run: echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          cd release
          pip install -r requirements.txt

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name testThirdaiPlatform --username testThirdaiPlatform --password Ov+4eWt/ojeOnGexHWTmNluBBtEMUoPNHFodeC8QOH+ACRCkdX5r 
          docker login testthirdaiplatform.azurecr.io -u testThirdaiPlatform --password Ov+4eWt/ojeOnGexHWTmNluBBtEMUoPNHFodeC8QOH+ACRCkdX5r

      # - name: Build and Push Docker Images
      #   run: |
      #     python release/push.py --branch ${{ env.BRANCH_NAME }} --config release/config.yaml

      - name: Pull and Save Docker Images as Tar
        run: |
          DOCKER_DIRECTORIES=("deployment_job" "llm_generation_job" "train_job" "thirdai_platform")

          VERSION_TAG="v1.0.0"
          REGISTRY="testthirdaiplatform.azurecr.io"
          BRANCH_NAME="${{ env.BRANCH_NAME }}"

          for DIR in "${DOCKER_DIRECTORIES[@]}"; do
            IMAGE_NAME="${DIR}_${BRANCH_NAME}"
            FULL_IMAGE_NAME="$REGISTRY/$IMAGE_NAME:$VERSION_TAG"
            
            echo "Pulling image: $FULL_IMAGE_NAME"
            if docker pull "$FULL_IMAGE_NAME"; then
              echo "Saving image as tar: ${IMAGE_NAME}.tar"
              docker save "$FULL_IMAGE_NAME" -o "${IMAGE_NAME}.tar"
            else
              echo "Error: Failed to pull image $FULL_IMAGE_NAME"
              echo "Skipping save for $FULL_IMAGE_NAME"
            fi
          done

      - name: Package Docker Images, Setup Script, and Config
        run: |
          tar -cvf docker_images_and_setup.tar *.tar bin/setup_local_registry.sh

      - name: Upload Tar Archive as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-images-tar
          path: docker_images_and_setup.tar
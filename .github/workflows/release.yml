name: Build and Package Docker Images

on:
  push:
    branches:
      - main
      - release-ci
    

jobs:
  build-and-package:
    name: Build, Package, and Upload Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          cd release
          pip install -r requirements.txt

      - name: Log in to Azure Container Registry
        run: |
          echo Ov+4eWt/ojeOnGexHWTmNluBBtEMUoPNHFodeC8QOH+ACRCkdX5r | az acr login --name testThirdaiPlatform --username testThirdaiPlatform --password-stdin
        env:
          AZURE_USERNAME: testThirdaiPlatform
          AZURE_PASSWORD: Ov+4eWt/ojeOnGexHWTmNluBBtEMUoPNHFodeC8QOH+ACRCkdX5r

      - name: Build and Push Docker Images
        run: |
          python release/push.py --branch release-ci --config release/config.yaml

      - name: Pull and Save Docker Images as Tar
        run: |
          DOCKER_DIRECTORIES=("deployment_job" "llm_generation_job" "train_job" "thirdai_platform")

          VERSION_TAG="1.0.0"

          REGISTRY="testthirdaiplatform.azurecr.io"

          for DIR in "${DOCKER_DIRECTORIES[@]}"; do
            IMAGE_NAME=$(basename "$DIR")
            FULL_IMAGE_NAME="$REGISTRY/$IMAGE_NAME:$VERSION_TAG"
            
            docker pull "$FULL_IMAGE_NAME"
            docker save "$FULL_IMAGE_NAME" -o "${IMAGE_NAME}.tar"
          done

      - name: Create Local Registry Setup Script
        run: |
          echo '#!/bin/bash' > setup_local_registry.sh
          echo 'docker run -d -p 5000:5000 --name registry registry:2' >> setup_local_registry.sh
          
          for DIR in "${DOCKER_DIRECTORIES[@]}"; do
            IMAGE_NAME=$(basename "$DIR")
            FULL_IMAGE_NAME="$REGISTRY/$IMAGE_NAME:$VERSION_TAG"
            
            echo "docker load -i ${IMAGE_NAME}.tar" >> setup_local_registry.sh
            echo "docker tag $FULL_IMAGE_NAME localhost:5000/$IMAGE_NAME:$VERSION_TAG" >> setup_local_registry.sh
            echo "docker push localhost:5000/$IMAGE_NAME:$VERSION_TAG" >> setup_local_registry.sh
          done

          chmod +x setup_local_registry.sh

      - name: Package Docker Images and Setup Script
        run: |
          tar -cvf docker_images_and_setup.tar *.tar setup_local_registry.sh

      - name: Upload Tar Archive as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-images-tar
          path: docker_images_and_setup.tar
name: Unit Tests

# Kills old jobs from the same pr if we push a new commit
# See https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PRODUCT_VERSION: "latest"
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group:
    types: [checks_requested]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  backend-unit-tests:
    runs-on: ubuntu-latest
    services:
      # We need postgres because generate_random_uuid does not work with sqlite since 
      # it requires pg-crypto. Since these tests are just testing individual backend
      # endpoints, they do not require nomad, traefik, vault, etc. These are available
      # in the integration tests.
      # TODO(Nicholas): refactor out generate_random_uuid so we can use in simple
      # sqlite DB for unit tests
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: model_bazaar
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - name: install dependencies
        run: |
          pip3 install -r thirdai_platform/requirements.txt
          pip3 install pytest
          pip3 install pyopenssl --upgrade

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Create Extension
        run: |
          export PGPASSWORD='password'
          psql -h localhost -U postgres -d model_bazaar -c "CREATE EXTENSION IF NOT EXISTS pgcrypto;"
          echo "DB_BASE_URI=postgresql://postgres:password@localhost:5432" >> $GITHUB_ENV

      - name: run unit tests
        run: |
          python3 -m pytest ./thirdai_platform/tests -v

      - name: Stop Services
        if: always()
        run: |
          sudo systemctl stop postgresql

  train-job-unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: install dependencies
      run: |
        pip3 install -r train_job/requirements.txt
        pip3 install pytest
        pip3 install pyopenssl --upgrade

    - name: run unit tests
      run: |
        python3 -m pytest ./train_job -v
name: Instatllation test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on: 
  workflow_dispatch:
    inputs:
      installer_branch_name:
        description: "Branch name of the platform"
        required: true
  
jobs:
  package_the_model:
    uses: ./.github/workflows/release-tar-ball.yml
    with:
      installer_branch_name:  ${{ github.event.inputs.installer_branch_name }}
      
    steps:
      - name: checkout the repository
        uses: actions/checkout@v2
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1

      - name: Verify AWS CLI Setup
        run: |
          aws --version
          aws sts get-caller-identity

      - name: "Azure Login"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Generate random version number in format 123.123.123
      - name: Generate random version
        id: generate_version
        run: |
          version=$(shuf -i 100-999 -n 3 | paste -sd '.')
          echo "Generated version: $version"
          echo "::set-output name=version::$version"
      
      - name: Name of the docker images of this ThirdAI platform branch
        id: tp_docker_image_name
        run: |
          echo "::set-output name=name::${{ github.event.inputs.branch_name }}_installation_test"

      - name: Build and push docker images to docker tests repository
        run: |
          cd release
          pip install -r requirements.txt
          python3 push.py -b ${{ tp_docker_image_name.outputs.name }} --config config.yaml --no-cache --version ${{ steps.generate_version.outputs.version }}

      # This is to clean up local docker builds to free up storage.
      - name: Cleanup Docker after build
        if: always() # Run this step regardless of success or failure
        run: |
          docker system prune -af --volumes

      - name: Set up SSH for cloning
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PLATFORM_INSTALLATION_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          echo "${{ secrets.HOST_PUBLIC_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      - name: Clone Platform repository
        run: |
          git clone git@github.com:ThirdAILabs/platform.git
          git checkout ${{ github.event.inputs.installer_branch_name }}
      
      - name: Download and store the model
        run: |
          mkdir -p gen-ai-models
          wget -O gen-ai-models/Llama-3.2-1B-Instruct-f16.gguf https://huggingface.co/bartowski/Llama-3.2-1B-Instruct-GGUF/resolve/main/Llama-3.2-1B-Instruct-f16.gguf?download=true

      - name: Copy driver script to parent directory
        run: |
          cp ./packaging/driver.sh ./driver.sh
      
      - name: Copy config.yml to parent directory
        run: |
          mv ./platform/config.yml ./config.yml
      
      - name: Install yq for YAML parsing
        run: |
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt update
          sudo apt install yq -y
      
      - name: Read Pull Credentials from release/config.yaml
        id: credentials
        run: |
          PULL_USERNAME=$(yq e '.azure.branches.${{ tp_docker_image_name.outputs.name }}.pull_credentials.username' $GITHUB_WORKSPACE/release/config.yaml)
          PULL_PASSWORD=$(yq e '.azure.branches.${{ tp_docker_image_name.outputs.name }}.pull_credentials.password' $GITHUB_WORKSPACE/release/config.yaml)

          echo "pull_username=$PULL_USERNAME" >> $GITHUB_ENV
          echo "pull_password=$PULL_PASSWORD" >> $GITHUB_ENV
      
      - name: Update the config.yml file
        run: |
          
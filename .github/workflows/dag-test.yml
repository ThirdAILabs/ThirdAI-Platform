name: Run DAG Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dag_tests:
    runs-on: ubuntu-latest-16-cores
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: model_bazaar
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 1
        done

    - name: Create Extension
      run: |
        psql -h localhost -U postgres -d model_bazaar -c "CREATE EXTENSION IF NOT EXISTS pgcrypto;"

    - name: Set DATABASE_URI
      run: echo "DATABASE_URI=postgresql://postgres:password@localhost:5432/model_bazaar" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Setup Python and Install Dependencies
      run: |
        python -m venv ${{ github.workspace }}/venv
        source venv/bin/activate
        pip install -r deployment_job/requirements.txt
        pip install -r docs/requirements.txt
        pip install -r headless/requirements.txt
        pip install -r llm_generation_job/requirements.txt
        pip install -r thirdai_platform/requirements.txt
        pip install -r train_job/requirements.txt
        echo "PYTHON_PATH=${{ github.workspace }}/venv/bin/python" >> $GITHUB_ENV

    - name: Install Nomad
      run: |
        sudo apt-get update && sudo apt-get install -y wget gpg
        wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor > /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt-get update && sudo apt-get install -y nomad


    - name: Start Nomad in Development Mode
      run: |
        nohup sudo nomad agent -dev -config="local_setup/agent.hcl" > nomad.log 2>&1 &
        echo "NOMAD_ENDPOINT=http://localhost:4646/" >> $GITHUB_ENV
    
    - name: Verify Nomad Cluster
      run: sleep 10 && nomad node status

    - name: Install Traefik
      run: |
        wget https://github.com/traefik/traefik/releases/download/v3.1.2/traefik_v3.1.2_linux_amd64.tar.gz
        sudo tar -xf traefik_v3.1.2_linux_amd64.tar.gz -C /usr/local/bin


    - name: Run Traefik
      run: |
        cd local_setup
        nohup sudo bash launch_traefik.sh > traefik.log 2>&1 &
        cd ..
        echo "PUBLIC_MODEL_BAZAAR_ENDPOINT=http://localhost:80/" >> $GITHUB_ENV
        echo "PRIVATE_MODEL_BAZAAR_ENDPOINT=http://localhost:80/" >> $GITHUB_ENV

    - name: Install PostgreSQL
      run: |
        sudo apt install curl ca-certificates
        sudo install -d /usr/share/postgresql-common/pgdg
        sudo curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc
        sudo sh -c 'echo "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        sudo apt update
        sudo apt -y install postgresql

    - name: Install Vault
      run: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update
        sudo apt-get install -y vault
        echo "HASHICORP_VAULT_ENDPOINT=http://127.0.0.1:8200" >> $GITHUB_ENV
        echo "HASHICORP_VAULT_TOKEN=00000000-0000-0000-0000-000000000000" >> $GITHUB_ENV

    - name: Start Vault Server
      run: nohup vault server --dev --dev-root-token-id="00000000-0000-0000-0000-000000000000" > vault.log 2>&1 &

    - name: Create Directories for Share and Test
      run: |
        mkdir -p $HOME/nfs/dir
        echo "SHARE_DIR=$HOME/nfs/dir" >> $GITHUB_ENV

    - name: Setup additional environment variables
      run: |
        echo "LICENSE_PATH=${{ github.workspace }}/local_setup/ndb_enterprise_license.json" >> $GITHUB_ENV
        echo "JWT_SECRET=CsnCr3lebs9eJQ" >> $GITHUB_ENV
        echo "SENDGRID_KEY=sendgrid-key" >> $GITHUB_ENV
        echo "GENAI_KEY=your-openai-key" >> $GITHUB_ENV
        echo "ADMIN_USERNAME=admin" >> $GITHUB_ENV
        echo "ADMIN_MAIL=admin@mail.com" >> $GITHUB_ENV
        echo "ADMIN_PASSWORD=password" >> $GITHUB_ENV
        echo "PLATFORM=local" >> $GITHUB_ENV
        echo "TEST_ENVIRONMENT=True" >> $GITHUB_ENV
    
    - name: Launch Backend
      run: |
        source ${{ github.workspace }}/venv/bin/activate
        cd $GITHUB_WORKSPACE/thirdai_platform
        nohup uvicorn main:app --reload --host 0.0.0.0 --port 8000 > uvicorn.log 2>&1 &

    - name: Run Tests
      run: |
        source ${{ github.workspace }}/venv/bin/activate
        cd $GITHUB_WORKSPACE
        pytest

    - name: Display Logs
      if: always()
      run: |
        echo "Nomad Logs:"
        cat nomad.log
        echo "Traefik Logs:"
        cat local_setup/traefik.log
        echo "Vault Logs:"
        cat vault.log
        echo "Uvicorn Logs:"
        cat $GITHUB_WORKSPACE/thirdai_platform/uvicorn.log

    - name: Stop Services
      if: always()
      run: |
        sudo systemctl stop postgresql
        sudo killall nomad
        sudo killall vault
        sudo killall traefik

name: End to end integration testing

on:
  workflow_dispatch: # Allows manual triggering of the workflow
    inputs:
      installer_branch_name:
        description: "Ansible-repo branch name"
        type: string
  pull_request:
    branches: [main]

jobs:
  Retrieve_facts:
    runs-on: ubuntu-latest

    outputs:
      version: "v${{ steps.docker_image_version.outputs.version }}"
      docker_image_branch_name: ${{ steps.docker_image_branch_name.outputs.branch_name }}

    steps:
      - name: Get the new version of the docker images
        id: docker_image_version
        run: |
          version=$(shuf -i 100-999 -n 3 | paste -sd '.')
          echo "Generated version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set the branch name of the docker images
        id: docker_image_branch_name
        run: |
          branch_name="test-${{ github.ref.name }}"
          echo "Docker image branch to build on: $branch_name"
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

  Build_and_push_images:
    needs: [Retrieve_facts]
    uses: ./.github/workflows/build_and_push_images.yml
    with:
      docker_image_branch_name: ${{ needs.Retrieve_facts.outputs.docker_image_branch_name }}
      docker_image_version: ${{ needs.Retrieve_facts.outputs.version }}

  package:
    needs: [Retrieve_facts, Build_and_push_images]
    uses: ./.github/workflows/packaging.yml
    with:
      Installer_branch_name: ${{ github.event.inputs.installer_branch_name }}
      docker_image_branch_name: ${{ needs.Retrieve_facts.outputs.docker_image_branch_name }}
      docker_image_version: "v${{ needs.Retrieve_facts.outputs.version }}"
      
  run_tests:
    needs: [Retrieve_facts, Build_and_push_images, package]
    uses: ./.github/workflows/integration_testing.yml
    with:
      docker_image_branch_name: ${{ needs.Retrieve_facts.outputs.docker_image_branch_name }}
      docker_image_version: "v${{ needs.Retrieve_facts.outputs.version }}"
      docker_registry_password: ${{ needs.Build_and_push_images.outputs.pull_password }}
      tarball_filename: ${{ needs.package.outputs.online_package_name }}
  
  cleanup:
    needs: [Retrieve_facts, Build_and_push_images, package, run_tests]
    uses: ./.github/workflows/cleanup.yml
    with:
      docker_image_branch_name: ${{ needs.Retrieve_facts.outputs.docker_image_branch_name }}
      docker_image_version: ${{ needs.Retrieve_facts.outputs.version }}
      offline_package_name: ${{ needs.package.outputs.offline_package_name }}
      online_package_name: ${{ needs.package.outputs.online_package_name }}
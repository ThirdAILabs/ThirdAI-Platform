{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/{deployment_id}/predict":{"post":{"summary":"Ndb Query","description":"Query the NDB model with specified parameters.\n\nParameters:\n- base_params: BaseQueryParams - Basic query parameters.\n    - query: str - The query text.\n    - top_k: int - The number of top results to return (default: 5).\n- ndb_params: Optional[NDBExtraParams] - Extra NDB-specific query parameters.\n    - rerank: bool - Whether to rerank the results (default: False).\n    - top_k_rerank: int - The number of top results to rerank (default: 100).\n    - context_radius: int - The context radius for the results (default: 1).\n    - rerank_threshold: float - The threshold for reranking (default: 1.5).\n    - top_k_threshold: Optional[int] - The threshold for top_k results.\n    - constraints: Constraints - Additional constraints for the query.\n- token: str - Authorization token.\n\nReturns:\n- JSONResponse: The query results.\n\nExample Request Body:\n```\n{\n    \"base_params\": {\n        \"query\": \"What is the capital of France?\",\n        \"top_k\": 5\n    },\n    \"ndb_params\": {\n        \"rerank\": true,\n        \"top_k_rerank\": 100,\n        \"context_radius\": 1,\n        \"rerank_threshold\": 1.5,\n        \"constraints\": {\n            \"field1\": {\n                \"constraint_type\": \"AnyOf\",\n                \"values\": [\"value1\", \"value2\"]\n            },\n            \"field2\": {\n                \"constraint_type\": \"InRange\",\n                \"minimum\": 0,\n                \"maximum\": 10,\n                \"inclusive_min\": true,\n                \"inclusive_max\": true\n            }\n        }\n    }\n}\n```","operationId":"ndb_query_{deployment_id}_predict_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body_ndb_query_{deployment_id}_predict_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/{deployment_id}/upvote":{"post":{"summary":"Ndb Upvote","description":"Upvote specific text-id pairs.\n\nParameters:\n- input: UpvoteInput - The upvote input containing text-id pairs.\n- token: str - Authorization token.\n\nReturns:\n- JSONResponse: Upvote success message.\n\nExample Request Body:\n```\n{\n    \"text_id_pairs\": [\n        {\"query_text\": \"What is AI?\", \"reference_id\": 1},\n        {\"query_text\": \"What is machine learning?\", \"reference_id\": 2}\n    ]\n}\n```","operationId":"ndb_upvote_{deployment_id}_upvote_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpvoteInput"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/{deployment_id}/associate":{"post":{"summary":"Ndb Associate","description":"Associate text pairs in the model.\n\nParameters:\n- input: AssociateInput - The associate input containing text pairs.\n- token: str - Authorization token.\n\nReturns:\n- JSONResponse: Association success message.\n\nExample Request Body:\n```\n{\n    \"text_pairs\": [\n        {\"source\": \"AI\", \"target\": \"Artificial Intelligence\"},\n        {\"source\": \"ML\", \"target\": \"Machine Learning\"}\n    ]\n}\n```","operationId":"ndb_associate_{deployment_id}_associate_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AssociateInput"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/{deployment_id}/sources":{"get":{"summary":"Get Sources","description":"Get the sources used in the model.\n\nParameters:\n- token: str - Authorization token.\n\nReturns:\n- JSONResponse: The list of sources.\n\nExample Response Body:\n```\n{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": [\"source1\", \"source2\", \"source3\"]\n}\n```","operationId":"get_sources_{deployment_id}_sources_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/{deployment_id}/delete":{"post":{"summary":"Delete","description":"Delete sources from the model.\n\nParameters:\n- input: DeleteInput - The input containing source IDs to be deleted.\n- token: str - Authorization token.\n\nReturns:\n- JSONResponse: Deletion success message.\n\nExample Request Body:\n```\n{\n    \"source_ids\": [\"source1\", \"source2\"]\n}\n```","operationId":"delete_{deployment_id}_delete_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteInput"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/{deployment_id}/save":{"post":{"summary":"Save","description":"Save the current state of the NDB model.\n\nParameters:\n- input: SaveModel - The input parameters for saving the model.\n- token: str - Authorization token.\n- override_permission: bool - Whether the user has permission to override the model.\n\nReturns:\n- JSONResponse: Save success message.\n\nExample Request Body:\n```\n{\n    \"override\": false,\n    \"model_name\": \"new_model_name\"\n}\n```","operationId":"save_{deployment_id}_save_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SaveModel"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/{deployment_id}/insert":{"post":{"summary":"Insert","description":"Insert documents into the model.\n\nParameters:\n- documents: str - The documents to be inserted in JSON format.\n- files: List[UploadFile] - Optional list of files to be uploaded.\n- input_mode: str - Mode of insertion (\"sync\" or \"async\").\n- token: str - Authorization token.\n\nReturns:\n- JSONResponse: Insertion success message.\n\nExample Request Body (Sync Mode):\n```\n{\n    \"documents\": [\n        {\n            \"location\": \"local\",\n            \"document_type\": \"PDF\",\n            \"path\": \"/path/to/file.pdf\",\n            \"metadata\": {\"author\": \"John Doe\"},\n            \"chunk_size\": 100,\n            \"stride\": 40,\n            \"emphasize_first_words\": 0,\n            \"ignore_header_footer\": true,\n            \"ignore_nonstandard_orientation\": true\n        }\n    ],\n    \"input_mode\": \"sync\"\n}\n```\n\nExample Request Body (Async Mode):\n```\n{\n    \"documents\": [\n        {\n            \"location\": \"local\",\n            \"document_type\": \"PDF\",\n            \"path\": \"/path/to/file.pdf\",\n            \"metadata\": {\"author\": \"John Doe\"},\n            \"chunk_size\": 100,\n            \"stride\": 40,\n            \"emphasize_first_words\": 0,\n            \"ignore_header_footer\": true,\n            \"ignore_nonstandard_orientation\": true\n        }\n    ],\n    \"input_mode\": \"async\"\n}\n```","operationId":"insert_{deployment_id}_insert_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_insert_{deployment_id}_insert_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/{deployment_id}/task-status":{"post":{"summary":"Task Status","description":"Get the status of a specific task.\n\nParameters:\n- task_id: str - The ID of the task.\n\nReturns:\n- JSONResponse: The status of the task.\n\nExample Request Body:\n```\n{\n    \"task_id\": \"1234-5678-91011-1213\"\n}\n```\n\nExample Response Body:\n```\n{\n    \"status\": \"success\",\n    \"message\": \"Information for task 1234-5678-91011-1213\",\n    \"data\": {\n        \"status\": \"in_progress\",\n        \"action\": \"insert\",\n        \"last_modified\": \"2024-07-31T12:34:56.789Z\",\n        \"documents\": [...],\n        \"message\": \"\",\n        \"data\": null,\n        \"token\": \"token_value\"\n    }\n}\n```","operationId":"task_status_{deployment_id}_task_status_post","parameters":[{"name":"task_id","in":"query","required":true,"schema":{"type":"string","title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/{deployment_id}/highlighted-pdf":{"get":{"summary":"Highlighted Pdf","description":"Get a highlighted PDF based on the reference ID.\n\nParameters:\n- reference_id: int - The reference ID of the document.\n\nReturns:\n- Response: The highlighted PDF as a stream.\n\nExample Request:\n```\n/highlighted-pdf?reference_id=123\n```","operationId":"highlighted_pdf_{deployment_id}_highlighted_pdf_get","parameters":[{"name":"reference_id","in":"query","required":true,"schema":{"type":"integer","title":"Reference Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/{deployment_id}/pdf-blob":{"get":{"summary":"Pdf Blob","description":"Get the PDF blob from the source.\n\nParameters:\n- source: str - The source path of the PDF.\n\nReturns:\n- Response: The PDF as a stream.\n\nExample Request:\n```\n/pdf-blob?source=/path/to/pdf\n```","operationId":"pdf_blob_{deployment_id}_pdf_blob_get","parameters":[{"name":"source","in":"query","required":true,"schema":{"type":"string","title":"Source"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/{deployment_id}/pdf-chunks":{"get":{"summary":"Pdf Chunks","description":"Get the chunks of a PDF document based on the reference ID.\n\nParameters:\n- reference_id: int - The reference ID of the document.\n\nReturns:\n- JSONResponse: The chunks of the PDF document.\n\nExample Request:\n```\n/pdf-chunks?reference_id=123\n```","operationId":"pdf_chunks_{deployment_id}_pdf_chunks_get","parameters":[{"name":"reference_id","in":"query","required":true,"schema":{"type":"integer","title":"Reference Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Homepage","operationId":"homepage__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Homepage  Get"}}}}}}}},"components":{"schemas":{"AnyOf":{"properties":{"constraint_type":{"type":"string","enum":["AnyOf"],"const":"AnyOf","title":"Constraint Type"},"values":{"items":{},"type":"array","title":"Values"}},"type":"object","required":["constraint_type","values"],"title":"AnyOf","description":"Represents a constraint where the value must be one of the specified values."},"AssociateInput":{"properties":{"text_pairs":{"items":{"$ref":"#/components/schemas/AssociateInputSingle"},"type":"array","title":"Text Pairs"}},"type":"object","required":["text_pairs"],"title":"AssociateInput","description":"Represents a list of source-target pairs for association."},"AssociateInputSingle":{"properties":{"source":{"type":"string","title":"Source"},"target":{"type":"string","title":"Target"}},"type":"object","required":["source","target"],"title":"AssociateInputSingle","description":"Represents a single source-target pair for association."},"BaseQueryParams":{"properties":{"query":{"type":"string","title":"Query"},"top_k":{"type":"integer","title":"Top K","default":5}},"type":"object","required":["query"],"title":"BaseQueryParams","description":"Represents the base query parameters."},"Body_insert_{deployment_id}_insert_post":{"properties":{"documents":{"type":"string","title":"Documents"},"files":{"items":{"type":"string","format":"binary"},"type":"array","title":"Files","default":[]},"input_mode":{"type":"string","title":"Input Mode","default":"sync"}},"type":"object","required":["documents"],"title":"Body_insert_{deployment_id}_insert_post"},"Body_ndb_query_{deployment_id}_predict_post":{"properties":{"base_params":{"$ref":"#/components/schemas/BaseQueryParams"},"ndb_params":{"anyOf":[{"$ref":"#/components/schemas/NDBExtraParams"},{"type":"null"}],"default":{"rerank":false,"top_k_rerank":100,"context_radius":1,"rerank_threshold":1.5,"constraints":{}}}},"type":"object","required":["base_params"],"title":"Body_ndb_query_{deployment_id}_predict_post"},"Constraints":{"additionalProperties":{"oneOf":[{"$ref":"#/components/schemas/AnyOf"},{"$ref":"#/components/schemas/EqualTo"},{"$ref":"#/components/schemas/InRange"},{"$ref":"#/components/schemas/GreaterThan"},{"$ref":"#/components/schemas/LessThan"}],"discriminator":{"propertyName":"constraint_type","mapping":{"AnyOf":"#/components/schemas/AnyOf","EqualTo":"#/components/schemas/EqualTo","GreaterThan":"#/components/schemas/GreaterThan","InRange":"#/components/schemas/InRange","LessThan":"#/components/schemas/LessThan"}}},"type":"object","title":"Constraints","description":"Root model for a collection of constraints.","default":{}},"DeleteInput":{"properties":{"source_ids":{"items":{"type":"string"},"type":"array","title":"Source Ids"}},"type":"object","required":["source_ids"],"title":"DeleteInput","description":"Represents a list of source IDs to be deleted."},"EqualTo":{"properties":{"constraint_type":{"type":"string","enum":["EqualTo"],"const":"EqualTo","title":"Constraint Type"},"value":{"title":"Value"}},"type":"object","required":["constraint_type","value"],"title":"EqualTo","description":"Represents a constraint where the value must be equal to the specified value."},"GreaterThan":{"properties":{"constraint_type":{"type":"string","enum":["GreaterThan"],"const":"GreaterThan","title":"Constraint Type"},"minimum":{"title":"Minimum"},"include_equal":{"type":"boolean","title":"Include Equal","default":false}},"type":"object","required":["constraint_type","minimum"],"title":"GreaterThan","description":"Represents a constraint where the value must be greater than the specified minimum."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"InRange":{"properties":{"constraint_type":{"type":"string","enum":["InRange"],"const":"InRange","title":"Constraint Type"},"minimum":{"title":"Minimum"},"maximum":{"title":"Maximum"},"inclusive_min":{"type":"boolean","title":"Inclusive Min","default":true},"inclusive_max":{"type":"boolean","title":"Inclusive Max","default":true}},"type":"object","required":["constraint_type","minimum","maximum"],"title":"InRange","description":"Represents a constraint where the value must be within the specified range."},"LessThan":{"properties":{"constraint_type":{"type":"string","enum":["LessThan"],"const":"LessThan","title":"Constraint Type"},"maximum":{"title":"Maximum"},"include_equal":{"type":"boolean","title":"Include Equal","default":false}},"type":"object","required":["constraint_type","maximum"],"title":"LessThan","description":"Represents a constraint where the value must be less than the specified maximum."},"NDBExtraParams":{"properties":{"rerank":{"type":"boolean","title":"Rerank","default":false},"top_k_rerank":{"type":"integer","title":"Top K Rerank","default":100},"context_radius":{"type":"integer","title":"Context Radius","default":1},"rerank_threshold":{"type":"number","title":"Rerank Threshold","default":1.5},"top_k_threshold":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Top K Threshold"},"constraints":{"$ref":"#/components/schemas/Constraints"}},"type":"object","title":"NDBExtraParams","description":"Represents extra parameters for NDB search queries."},"SaveModel":{"properties":{"override":{"type":"boolean","title":"Override"},"model_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Model Name"}},"type":"object","required":["override"],"title":"SaveModel","description":"Represents the parameters for saving a model."},"UpvoteInput":{"properties":{"text_id_pairs":{"items":{"$ref":"#/components/schemas/UpvoteInputSingle"},"type":"array","title":"Text Id Pairs"}},"type":"object","required":["text_id_pairs"],"title":"UpvoteInput","description":"Represents a list of query-reference pairs for upvoting."},"UpvoteInputSingle":{"properties":{"query_text":{"type":"string","title":"Query Text"},"reference_id":{"type":"integer","minimum":0.0,"title":"Reference Id"}},"type":"object","required":["query_text","reference_id"],"title":"UpvoteInputSingle","description":"Represents a single query-reference pair for upvoting."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}
{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/api/user/email-signup-basic":{"post":{"tags":["user"],"summary":"Email Signup","description":"Sign up a new user with email and password.\n\nParameters:\n- body: The body of the request containing username, email, and password.\n    - Example:\n    ```json\n    {\n        \"username\": \"johndoe\",\n        \"email\": \"johndoe@example.com\",\n        \"password\": \"securepassword\"\n    }\n    ```\n- session: The database session (dependency).\n\nReturns:\n- A JSON response indicating the signup status.","operationId":"email_signup_api_user_email_signup_basic_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountSignupBody"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/user/redirect-verify":{"get":{"tags":["user"],"summary":"Redirect Email Verify","description":"Redirect to email verification endpoint.\n\nParameters:\n- verification_token: The verification token for the user.\n- request: The HTTP request object (dependency).\n\nReturns:\n- A HTML response with the redirection page.","operationId":"redirect_email_verify_api_user_redirect_verify_get","parameters":[{"name":"verification_token","in":"query","required":true,"schema":{"type":"string","title":"Verification Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/user/email-verify":{"post":{"tags":["user"],"summary":"Email Verify","description":"Verify the user's email with the provided token.\n\nParameters:\n- verification_token: The verification token for the user.\n- session: The database session (dependency).\n\nReturns:\n- A JSON response indicating the verification status.","operationId":"email_verify_api_user_email_verify_post","parameters":[{"name":"verification_token","in":"query","required":true,"schema":{"type":"string","title":"Verification Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/user/email-login":{"get":{"tags":["user"],"summary":"Email Login","description":"Log in a user with email and password.\n\nParameters:\n- credentials: The HTTP basic credentials (dependency).\n    - Example:\n    ```json\n    {\n        \"username\": \"johndoe@example.com\",\n        \"password\": \"securepassword\"\n    }\n    ```\n- session: The database session (dependency).\n\nReturns:\n- A JSON response indicating the login status and user details along with an access token.","operationId":"email_login_api_user_email_login_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"HTTPBasic":[]}]}},"/api/train/ndb":{"post":{"tags":["train"],"summary":"Train Ndb","description":"Train a NeuralDB model.\n\nParameters:\n- model_name: The name of the model.\n- files: List of files to be used for training.\n- file_details_list: Optional JSON string of file details.\n    - Example:\n    ```json\n    {\n        \"file_details\": [\n            {\n                \"mode\": \"unsupervised\",\n                \"location\": \"local\",\n                \"is_folder\": false,\n                \"source_id\": null,\n                \"metadata\": {\n                    \"key1\": \"value1\",\n                    \"key2\": \"value2\"\n                }\n            }\n        ]\n    }\n    ```\n    - Supported modes: \"unsupervised\", \"supervised\", \"test\"\n    - Supported locations: \"local\", \"nfs\", \"s3\"\n- base_model_identifier: Optional identifier of the base model.\n- extra_options_form: Optional JSON string of extra options for training.\n    - Example:\n    ```json\n    {\n        \"num_models_per_shard\": 1,\n        \"num_shards\": 1,\n        \"allocation_cores\": 4,\n        \"allocation_memory\": 8192,\n        \"model_cores\": 4,\n        \"model_memory\": 8192,\n        \"priority\": 1,\n        \"csv_id_column\": \"id\",\n        \"csv_strong_columns\": [\"column1\", \"column2\"],\n        \"csv_weak_columns\": [\"column3\"],\n        \"csv_reference_columns\": [\"reference_column\"],\n        \"fhr\": 100,\n        \"embedding_dim\": 256,\n        \"output_dim\": 128,\n        \"max_in_memory_batches\": 10,\n        \"extreme_num_hashes\": 10,\n        \"num_classes\": 2,\n        \"csv_query_column\": \"query\",\n        \"csv_id_delimiter\": \",\",\n        \"learning_rate\": 0.01,\n        \"batch_size\": 32,\n        \"unsupervised_epochs\": 10,\n        \"supervised_epochs\": 10,\n        \"tokenizer\": \"default\",\n        \"hidden_bias\": true,\n        \"retriever\": \"default\",\n        \"unsupervised_train\": true,\n        \"disable_finetunable_retriever\": false,\n        \"checkpoint_interval\": 100,\n        \"fast_approximation\": false,\n        \"num_buckets_to_sample\": 10,\n        \"metrics\": [\"accuracy\", \"f1\"],\n        \"on_disk\": false,\n        \"docs_on_disk\": false\n    }\n    ```\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response indicating the status of the training job submission.","operationId":"train_ndb_api_train_ndb_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"model_name","in":"query","required":true,"schema":{"type":"string","title":"Model Name"}},{"name":"base_model_identifier","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Base Model Identifier"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_train_ndb_api_train_ndb_post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/train/udt":{"post":{"tags":["train"],"summary":"Train Udt","description":"Train a UDT model.\n\nParameters:\n- model_name: The name of the model.\n- files: List of files to be used for training.\n- file_details_list: Optional JSON string of file details.\n    - Example:\n    ```json\n    {\n        \"file_details\": [\n            {\n                \"mode\": \"supervised\",\n                \"location\": \"local\",\n                \"is_folder\": false,\n            }\n        ]\n    }\n    ```\n    - Supported modes: \"supervised\", \"test\" (UDT files cannot be in \"unsupervised\" mode)\n    - Supported locations: \"local\", \"nfs\", \"s3\"\n- base_model_identifier: Optional identifier of the base model.\n- extra_options_form: Optional JSON string of extra options for training.\n    - Example:\n    ```json\n    {\n        \"allocation_cores\": 4,\n        \"allocation_memory\": 8192,\n        \"sub_type\": \"text\",\n        \"target_labels\": [\"label1\", \"label2\"],\n        \"source_column\": \"source\",\n        \"target_column\": \"target\",\n        \"default_tag\": \"O\",\n        \"delimiter\": \",\",\n        \"text_column\": \"text\",\n        \"label_column\": \"label\",\n        \"n_target_classes\": 2\n    }\n    ```\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response indicating the status of the training job submission.","operationId":"train_udt_api_train_udt_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"model_name","in":"query","required":true,"schema":{"type":"string","title":"Model Name"}},{"name":"base_model_identifier","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Base Model Identifier"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_train_udt_api_train_udt_post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/train/complete":{"post":{"tags":["train"],"summary":"Train Complete","description":"Mark the training of a model as complete.\n\nParameters:\n- body: The body of the request containing model_id and metadata.\n    - Example:\n    ```json\n    {\n        \"model_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n        \"metadata\": {\n            \"accuracy\": \"0.95\",\n            \"f1_score\": \"0.92\"\n        }\n    }\n    ```\n- session: The database session (dependency).\n\nReturns:\n- A JSON response indicating the update status.","operationId":"train_complete_api_train_complete_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrainComplete"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/train/update-status":{"post":{"tags":["train"],"summary":"Train Fail","description":"Update the training status of a model.\n\nParameters:\n- model_id: The ID of the model.\n- status: The new status for the model (e.g., \"failed\", \"in_progress\").\n- message: A message describing the update.\n    - Example:\n    ```json\n    {\n        \"model_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n        \"status\": \"failed\",\n        \"message\": \"Training failed due to insufficient data.\"\n    }\n    ```\n- session: The database session (dependency).\n\nReturns:\n- A JSON response indicating the update status.","operationId":"train_fail_api_train_update_status_post","parameters":[{"name":"model_id","in":"query","required":true,"schema":{"type":"string","title":"Model Id"}},{"name":"status","in":"query","required":true,"schema":{"$ref":"#/components/schemas/Status"}},{"name":"message","in":"query","required":true,"schema":{"type":"string","title":"Message"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/train/create-shard":{"post":{"tags":["train"],"summary":"Create Shard","description":"Create a shard for training a NeuralDB model.\n\nParameters:\n- shard_num: The shard number.\n- model_id: The ID of the model.\n- data_id: The ID of the data.\n- base_model_id: Optional ID of the base model.\n- extra_options_form: Optional JSON string of extra options for training.\n    - Example:\n    ```json\n    {\n        \"num_models_per_shard\": 1,\n        \"num_shards\": 1,\n        \"allocation_cores\": 4,\n        \"allocation_memory\": 8192,\n        \"model_cores\": 4,\n        \"model_memory\": 8192,\n        \"priority\": 1,\n        \"csv_id_column\": \"id\",\n        \"csv_strong_columns\": [\"column1\", \"column2\"],\n        \"csv_weak_columns\": [\"column3\"],\n        \"csv_reference_columns\": [\"reference_column\"],\n        \"fhr\": 100,\n        \"embedding_dim\": 256,\n        \"output_dim\": 128,\n        \"max_in_memory_batches\": 10,\n        \"extreme_num_hashes\": 10,\n        \"num_classes\": 2,\n        \"csv_query_column\": \"query\",\n        \"csv_id_delimiter\": \",\",\n        \"learning_rate\": 0.01,\n        \"batch_size\": 32,\n        \"unsupervised_epochs\": 10,\n        \"supervised_epochs\": 10,\n        \"tokenizer\": \"default\",\n        \"hidden_bias\": true,\n        \"retriever\": \"default\",\n        \"unsupervised_train\": true,\n        \"disable_finetunable_retriever\": false,\n        \"checkpoint_interval\": 100,\n        \"fast_approximation\": false,\n        \"num_buckets_to_sample\": 10,\n        \"metrics\": [\"accuracy\", \"f1\"],\n        \"on_disk\": false,\n        \"docs_on_disk\": false\n    }\n    ```\n- session: The database session (dependency).\n\nReturns:\n- A JSON response indicating the shard creation status.","operationId":"create_shard_api_train_create_shard_post","parameters":[{"name":"shard_num","in":"query","required":true,"schema":{"type":"integer","title":"Shard Num"}},{"name":"model_id","in":"query","required":true,"schema":{"type":"string","title":"Model Id"}},{"name":"data_id","in":"query","required":true,"schema":{"type":"string","title":"Data Id"}},{"name":"base_model_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Base Model Id"}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"allOf":[{"$ref":"#/components/schemas/Body_create_shard_api_train_create_shard_post"}],"title":"Body"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/train/update-shard-train-status":{"post":{"tags":["train"],"summary":"Update Shard Train Status","description":"Update the training status of a model shard.\n\nParameters:\n- shard_num: The shard number.\n- model_id: The ID of the model.\n- status: The new status for the shard (e.g., \"failed\", \"in_progress\").\n- message: A message describing the update.\n    - Example:\n    ```json\n    {\n        \"shard_num\": 1,\n        \"model_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n        \"status\": \"in_progress\",\n        \"message\": \"Shard training in progress.\"\n    }\n    ```\n- session: The database session (dependency).\n\nReturns:\n- A JSON response indicating the update status.","operationId":"update_shard_train_status_api_train_update_shard_train_status_post","parameters":[{"name":"shard_num","in":"query","required":true,"schema":{"type":"integer","title":"Shard Num"}},{"name":"model_id","in":"query","required":true,"schema":{"type":"string","title":"Model Id"}},{"name":"status","in":"query","required":true,"schema":{"$ref":"#/components/schemas/Status"}},{"name":"message","in":"query","required":false,"schema":{"type":"string","default":"","title":"Message"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/train/status":{"get":{"tags":["train"],"summary":"Train Status","description":"Get the status of a NeuralDB.\n\nParameters:\n- model_identifier: The identifier of the model to retrieve info about.\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response with the model status.","operationId":"train_status_api_train_status_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"model_identifier","in":"query","required":true,"schema":{"type":"string","title":"Model Identifier"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/train/model-shard-train-status":{"get":{"tags":["train"],"summary":"Model Shard Train Status","description":"Get the training status of all shards for a given model.\n\nParameters:\n- model_id: The ID of the model.\n- session: The database session (dependency).\n\nReturns:\n- A JSON response with the training status of all shards.","operationId":"model_shard_train_status_api_train_model_shard_train_status_get","parameters":[{"name":"model_id","in":"query","required":true,"schema":{"type":"string","title":"Model Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/model/public-list":{"get":{"tags":["model"],"summary":"List Public Models","description":"List public models.\n\nParameters:\n- name: The name to filter models.\n- domain: Optional domain to filter models.\n- username: Optional username to filter models.\n- session: The database session (dependency).\n\nReturns:\n- A JSON response with the list of public models.","operationId":"list_public_models_api_model_public_list_get","parameters":[{"name":"name","in":"query","required":true,"schema":{"type":"string","title":"Name"}},{"name":"domain","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Domain"}},{"name":"username","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Username"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/model/list":{"get":{"tags":["model"],"summary":"List Models","description":"List models based on the given name, domain, username, and access level.\n\nParameters:\n- name: The name to filter models.\n- domain: Optional domain to filter models.\n- username: Optional username to filter models.\n- access_level: Optional access level to filter models.\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response with the list of models.","operationId":"list_models_api_model_list_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"name","in":"query","required":true,"schema":{"type":"string","title":"Name"}},{"name":"domain","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Domain"}},{"name":"username","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Username"}},{"name":"access_level","in":"query","required":false,"schema":{"anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}],"title":"Access Level"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/model/name-check":{"get":{"tags":["model"],"summary":"Check Model","description":"Check if a model with the given name exists for the authenticated user.\n\nParameters:\n- name: The name of the model to check.\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response indicating if the model is present.","operationId":"check_model_api_model_name_check_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"name","in":"query","required":true,"schema":{"type":"string","title":"Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/model/save-deployed":{"post":{"tags":["model"],"summary":"Save Deployed Model","description":"Save a deployed model.\n\nParameters:\n- body: The body of the request containing deployment details.\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response indicating the status of saving the model.","operationId":"save_deployed_model_api_model_save_deployed_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SaveNDBDeployedModel"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/deploy/permissions/{deployment_id}":{"get":{"tags":["deploy"],"summary":"Get Deployment Permissions","description":"Get the permissions for a deployment.\n\nParameters:\n- deployment_id: The ID of the deployment.\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response with the read, write, and override permissions and the token expiration time.","operationId":"get_deployment_permissions_api_deploy_permissions__deployment_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"deployment_id","in":"path","required":true,"schema":{"type":"string","title":"Deployment Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/deploy/run":{"post":{"tags":["deploy"],"summary":"Deploy Model","description":"Deploy a model.\n\nParameters:\n- deployment_name: The name of the deployment.\n- model_identifier: The identifier of the model to deploy.\n- memory: Optional memory allocation for the deployment.\n- autoscaling_enabled: Whether autoscaling is enabled.\n- autoscaler_max_count: The maximum count for the autoscaler.\n- genai_key: Optional GenAI key.\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response indicating the status of the deployment.","operationId":"deploy_model_api_deploy_run_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"deployment_name","in":"query","required":true,"schema":{"type":"string","title":"Deployment Name"}},{"name":"model_identifier","in":"query","required":true,"schema":{"type":"string","title":"Model Identifier"}},{"name":"memory","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Memory"}},{"name":"autoscaling_enabled","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Autoscaling Enabled"}},{"name":"autoscaler_max_count","in":"query","required":false,"schema":{"type":"integer","default":1,"title":"Autoscaler Max Count"}},{"name":"genai_key","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Genai Key"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/deploy/status":{"get":{"tags":["deploy"],"summary":"Deployment Status","description":"Get the status of a deployment.\n\nParameters:\n- deployment_identifier: The identifier of the deployment.\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response with the deployment status and ID.","operationId":"deployment_status_api_deploy_status_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"deployment_identifier","in":"query","required":true,"schema":{"type":"string","title":"Deployment Identifier"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/deploy/update-status":{"post":{"tags":["deploy"],"summary":"Deployment Status","description":"Update the status of a deployment.\n\nParameters:\n- deployment_id: The ID of the deployment.\n- status: The new status for the deployment.\n- session: The database session (dependency).\n\nReturns:\n- A JSON response indicating the update status.","operationId":"deployment_status_api_deploy_update_status_post","parameters":[{"name":"deployment_id","in":"query","required":true,"schema":{"type":"string","title":"Deployment Id"}},{"name":"status","in":"query","required":true,"schema":{"$ref":"#/components/schemas/Status"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/deploy/stop":{"post":{"tags":["deploy"],"summary":"Undeploy Model","description":"Stop a running deployment.\n\nParameters:\n- deployment_identifier: The identifier of the deployment to stop.\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response indicating the stop status of the deployment.","operationId":"undeploy_model_api_deploy_stop_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"deployment_identifier","in":"query","required":true,"schema":{"type":"string","title":"Deployment Identifier"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/deploy/log":{"post":{"tags":["deploy"],"summary":"Log Results","description":"Log training results for a deployment.\n\nParameters:\n- log_data: The log data to save (body).\n- session: The database session (dependency).\n- authenticated_user: The authenticated user (dependency).\n\nReturns:\n- A JSON response indicating the log entry status.","operationId":"log_results_api_deploy_log_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogData"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}}},"components":{"schemas":{"AccountSignupBody":{"properties":{"username":{"type":"string","title":"Username"},"email":{"type":"string","title":"Email"},"password":{"type":"string","title":"Password"}},"type":"object","required":["username","email","password"],"title":"AccountSignupBody"},"Body_create_shard_api_train_create_shard_post":{"properties":{"extra_options_form":{"type":"string","title":"Extra Options Form","default":"{}"}},"type":"object","title":"Body_create_shard_api_train_create_shard_post"},"Body_train_ndb_api_train_ndb_post":{"properties":{"files":{"items":{"type":"string","format":"binary"},"type":"array","title":"Files"},"file_details_list":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"File Details List"},"extra_options_form":{"type":"string","title":"Extra Options Form","default":"{}"}},"type":"object","required":["files"],"title":"Body_train_ndb_api_train_ndb_post"},"Body_train_udt_api_train_udt_post":{"properties":{"files":{"items":{"type":"string","format":"binary"},"type":"array","title":"Files"},"file_details_list":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"File Details List"},"extra_options_form":{"type":"string","title":"Extra Options Form","default":"{}"}},"type":"object","required":["files"],"title":"Body_train_udt_api_train_udt_post"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LogData":{"properties":{"deployment_id":{"type":"string","title":"Deployment Id"},"action":{"type":"string","title":"Action"},"train_samples":{"items":{"additionalProperties":{"type":"string"},"type":"object"},"type":"array","title":"Train Samples"},"used":{"type":"boolean","title":"Used"}},"type":"object","required":["deployment_id","action","train_samples","used"],"title":"LogData"},"SaveNDBDeployedModel":{"properties":{"deployment_id":{"type":"string","title":"Deployment Id"},"model_id":{"type":"string","title":"Model Id"},"base_model_id":{"type":"string","title":"Base Model Id"},"model_name":{"type":"string","title":"Model Name"},"metadata":{"additionalProperties":{"type":"string"},"type":"object","title":"Metadata"}},"type":"object","required":["deployment_id","model_id","base_model_id","model_name","metadata"],"title":"SaveNDBDeployedModel"},"Status":{"type":"string","enum":["not_started","starting","in_progress","stopped","complete","failed"],"title":"Status"},"TrainComplete":{"properties":{"model_id":{"type":"string","title":"Model Id"},"metadata":{"additionalProperties":{"type":"string"},"type":"object","title":"Metadata"}},"type":"object","required":["model_id","metadata"],"title":"TrainComplete"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"HTTPBasic":{"type":"http","scheme":"basic"},"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"/auth/token"}}}}}}
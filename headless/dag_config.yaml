DAG1:
  check_unsupervised:
    dependencies: []
    params:
      sharded: variable      # Use the value of the "sharded" variable
      run_name: variable      # Use the value of the "run_name" variable
      config: variable        # Use the value of the "config" variable

  await_train:
    dependencies: [check_unsupervised]    # Depends on the completion of the "check_unsupervised" task
    params:
      model: check_unsupervised           # Use the output of the "check_unsupervised" task as the "model" parameter

  deploy:
    dependencies: [await_train]           # Depends on the completion of the "await_train" task
    params:
      model: check_unsupervised           # Use the output of the "check_unsupervised" task as the "model" parameter
      run_name: variable                  # Use the value of the "run_name" variable

  await_deploy:
    dependencies: [deploy]                # Depends on the completion of the "deploy" task
    params:
      deployment: deploy                  # Use the output of the "deploy" task as the "deployment" parameter

  check_deployment:
    dependencies: [await_deploy]          # Depends on the completion of the "await_deploy" task
    params:
      deployment: deploy                  # Use the output of the "deploy" task as the "deployment" parameter
      run_name: variable                  # Use the value of the "run_name" variable
      config: variable                    # Use the value of the "config" variable
  
  undeploy:
    dependencies: [check_deployment]      # Depends on the completion of the "check_deployment" task
    params:
      deployment: deploy                  # Use the output of the "deploy" task as the "deployment" parameter

DAG2:
  check_unsupervised_supervised:
    dependencies: []
    params:
      sharded: variable      # Use the value of the "sharded" variable
      run_name: variable      # Use the value of the "run_name" variable
      config: variable        # Use the value of the "config" variable

  await_train:
    dependencies: [check_unsupervised_supervised]  # Depends on the completion of the "check_unsupervised_supervised" task
    params:
      model: check_unsupervised_supervised          # Use the output of the "check_unsupervised_supervised" task as the "model" parameter

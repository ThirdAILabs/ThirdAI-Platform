{% if sub_type == "shard_train" %}
job "train-{{ model_id }}-{{ type }}-{{ sub_type }}-{{ shard_num }}" {
{% else %}
job "train-{{ model_id }}-{{ type }}-{{ sub_type }}" {
{% endif %}
  datacenters = ["dc1"]

  type = "batch"

  group "train-job" {
    count = 1

    task "server" {

      {% if platform == "docker" %}
        driver = "docker"
      {% elif platform == "local" %}
        driver = "raw_exec"
      {% endif %}

      env {
        MODEL_ID = "{{ model_id }}"
        DATA_ID = "{{ data_id }}"
        MODEL_BAZAAR_ENDPOINT = "{{ model_bazaar_endpoint }}"
        LICENSE_KEY = "{{ license_key }}"
        BASE_MODEL_ID = "{{ base_model_id }}"
        AWS_ACCESS_KEY = "{{ aws_access_key }}"
        AWS_ACCESS_SECRET = "{{ aws_access_secret }}"
        TYPE = "{{ type }}"
        SUB_TYPE = "{{ sub_type }}"
        SHARD_NUM = "{{ shard_num }}"

        {%- for key, value in extra_options.items() %}
        {{ key | upper }} = "{{ value }}"
        {%- endfor %}

        {% if platform == "docker" %}
          MODEL_BAZAAR_DIR = "/model_bazaar"
        {% elif platform == "local" %}
          MODEL_BAZAAR_DIR = "{{ share_dir }}"
        {% endif %}
      }

      config {
        {% if platform == "docker" %}
          image = "{{ image_name }}:{{ tag }}"
          image_pull_timeout = "15m"
          volumes = [
            "{{ share_dir }}:/model_bazaar"
          ]
        {% elif platform == "local" %}
          command = "{{ python_path }}"
          args    = ["{{ train_script }}"]
        {% endif %}
      }

      resources {
        cpu = {{ extra_options.get('allocation__cores', 1) * 2400 }}
        memory = {{ extra_options.get('allocation_memory', '6800') }}

      }
    }
  }
}